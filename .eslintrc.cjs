module.exports = {
  env: {
    browser: true,
    es2021: true,
    node: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:react/recommended',
  ],
  overrides: [
    {
      env: {
        node: true,
      },
      files: ['.eslintrc.{js,cjs}'],
      parserOptions: {
        sourceType: 'script',
      },
    },
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint', 'react'],
  rules: {
    quotes: ['error', 'single', { allowTemplateLiterals: true }],
    'no-undef': 'off',
    'no-unused-vars': 'off',
    '@typescript-eslint/no-unused-vars': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    'react/no-unused-prop-types': 'warn',
    'react/prop-types': 'off',
    'react/no-array-index-key': 'off',
    'react/button-has-type': 'off',
    'react/require-default-props': 'off',
    'no-console': 'off',
    'func-names': 'off',
    'object-shorthand': 'off',
    'class-methods-use-this': 'off',
    'no-var': 'off',
    'vars-on-top': 'off',
    'no-loop-func': 'off',
    'react/function-component-definition': 'off',
    'react/jsx-filename-extension': [
      1,
      { extensions: ['.js', '.jsx', '.tsx', '.ts'] },
    ],
    'no-use-before-define': 'off',
    '@typescript-eslint/no-use-before-define': ['off'],
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    'import/prefer-default-export': 'off',
    'react/react-in-jsx-scope': 'off',
    'react/jsx-no-constructed-context-values': 'off',
    'no-nested-ternary': 'off',
    'react/jsx-props-no-spreading': 'off',
    'react/jsx-no-useless-fragment': 'off',
    'no-unused-expressions': 'off',
    'array-callback-return': 'off',
    'import/no-unresolved': 'off',
    'no-param-reassign': 'off',
    'react/jsx-boolean-value': 'off',
    'jsx-a11y/label-has-associated-control': 'off',
    'react/style-prop-object': 'off',
    'react/no-unstable-nested-components': 'off',
    'react/jsx-no-target-blank': 'off',
    'react/no-unknown-property': ['error', { ignore: ['css'] }],
  },
};
